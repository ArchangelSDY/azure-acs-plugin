KubernetesDeploymentCommand_configFilesNotSpecified = ERROR: Kubenetes config files are not specified
KubernetesDeploymentCommand_deleteConfigFile = Delete Kubernetes management config file {0}
KubernetesDeploymentCommand_failedToDeleteFile = Failed to delete the file {0}

KubernetesClientUtil_loadingForPath = Loading configurations for path pattern:
KubernetesClientUtil_notFoundInPattern = No configuration file found from pattern:
KubernetesClientUtil_loadingConfiguration = Loading configuration:
KubernetesClientUtil_noResourceLoadedFrom = No resource loaded from:
KubernetesClientUtil_appliedDeployment = Applied deployment:
KubernetesClientUtil_appliedService = Applied service:
KubernetesClientUtil_skipped = Skipped resource (supported type: deployment / service):

ACSDeploymentContext_blankContainerService = Blank container service
ACSDeploymentContext_selectAzureCredentials = --- Select Azure credentials ---
ACSDeploymentContext_selectAzureCredentialsFirst = --- Select Azure credentials first ---
ACSDeploymentContext_failedToLoadResourceGroups = *** Failed to load resource groups: {0} ***
ACSDeploymentContext_noResourceGroupFound = --- No resource group was found ---
ACSDeploymentContext_selectAzureCredentialsAndGroupFirst = --- Select Azure credentials and resource group first ---
ACSDeploymentContext_failedToLoadContainerServices = *** Failed to load container services: {0} ***
ACSDeploymentContext_noContainerServiceFound = --- No container service was found ---
ACSDeploymentContext_configFilePathsRequired = Config file path(s) is required.
ACSDeploymentContext_missingCredentials = ERROR: Azure credentials is not configured or found
ACSDeploymentContext_missingResourceGroup = ERROR: Azure resource group is not configured
ACSDeploymentContext_missingContainerServiceName = ERROR: Azure container service name is not configured
ACSDeploymentContext_missingSSHCredentials = ERROR: SSH credentials is not configured
ACSDeploymentContext_missingKubernetesNamespace = ERROR: Kubernetes namespace is not configured
ACSDeploymentContext_missingOrchestratorType = ERROR: No orchestrator type passed along with container service
ACSDeploymentContext_orchestratorNotSupported = ERROR: Container Service orchestrator type {0} is not supported
ACSDeploymentContext_resourceGroupNotFound = ERROR: Resource group is not found from the given Azure credentials
ACSDeploymentContext_containerServiceNotFound = ERROR: Container service is not found from the given resource group
ACSDeploymentContext_containerServiceTypeMissMatch = ERROR: Container service orchestrator type doesn't match Azure registry
ACSDeploymentContext_sshFailure = ERROR: Failed to SSH to master node: {0}
ACSDeploymentContext_validationError = ERROR: {0}
ACSDeploymentContext_validationSuccess = Successfully validated the Azure Container Service publish configuration

DeploymentChoiceCommand_orchestratorNotFound = ERROR: Container service's orchestrator type was not found
DeploymentChoiceCommand_orchestratorNotSupported = ERROR: Deployment of container service with orchestrator type {0} is not supported

EnablePortCommand_enabling = Enabling ports: {0}
EnablePortCommand_createSecurityRuleIfNeeded = Creating security rule for port {0} if needed.
EnablePortCommand_securityRuleFound = Security rule for port {0} was found.
EnablePortCommand_securityGroupNotFound = ERROR: The security group associated to the agents was not found.
EnablePortCommand_exceedMaxPriority = ERROR: Exceeded max priority for inbound security rules.
EnablePortCommand_creatingRule = Creating Security rule for port {0} with name: {1}
EnablePortCommand_allowTraffic = Allow traffic from the Internet to Public Agents port {0}
EnablePortCommand_createLBIfNeeded = Creating load balancer rule for port {0} if needed.
EnablePortCommand_missMatch = ERROR: Balancer configuration from template not matching previous configuration.
EnablePortCommand_lbFound = Load balancer rule for port {0} found.
EnablePortCommand_lbNotFound = ERROR: The load balancer associated to the agents was not found.
EnablePortCommand_creatingLB = Creating load balancer rule for port {0} with name: {1}

GetContainserServiceInfoCommand_getFQDN = Getting management public FQDN.
GetContainserServiceInfoCommand_containerServiceNotFound = Container Service {0} was not found in Resource Group {1}
GetContainserServiceInfoCommand_orchestratorType = Container service orchestrator type: {0}
GetContainserServiceInfoCommand_fqdn = Management master FQDN: {0}
GetContainserServiceInfoCommand_adminUser = Management admin username: {0}

MarathonDeploymentCommand_configNotFoundAt = No configuration found at: {0}
MarathonDeploymentCommand_copyConfigFileTo = Copying marathon config file '{0}' to remote: {1}:{2}
MarathonDeploymentCommand_deletingApp = Deleting application with appId: {0} if it exists
MarathonDeploymentCommand_deployingApp = Deploying file '{0}' with appId {1} to marathon.
MarathonDeploymentCommand_removeTempFile = Remove temporary remote config file: {0}

AzureHelper_servicePrincipalNotFound = No service principal found for credentials ID: {0}

JSchClient_failedToCreateSession = Failed to create SSH session
JSchClient_copyFileTo = copy file {0} to {1}:{2}
JSchClient_copyFileFrom = copy file {0}:{1} to {2}
JSchClient_sftpError = sftp error
JSchClient_execCommand = ===> exec: {0}
JSchClient_commandExitStatus = <== command exit status: {0}
JSchClient_errorExecution = Error executing SSH command: {0}
JSchClient_output = <=== {0}
JSchClient_failedExecution = Failed to execute command

AbstractBaseContext_error = ERROR:

ACSDeploymentRecorder_starting = Starting Azure Container Service Deployment
ACSDeploymentRecorder_endWithErrorState = ERROR: Azure Container Service deployment ended with {0}
ACSDeploymentRecorder_finished = Finished Azure Container Service Deployment
ACSDeploymentRecorder_interrupted = Job execution was interrupted
ACSDeploymentRecorder_displayName = Deploy to Azure Container Service

JobContext_failedToGetEnv = Failed to get Job environment variables
JobContext_nullContent = null content returned
